{"ast":null,"code":"var _jsxFileName = \"/Users/esuweld/Desktop/Main Studies/vidly-app/vidly/src/components/movies.jsx\";\nimport React, { Component } from \"react\";\nimport { getMovies, saveMovie } from \"./services/fakeMovieService\";\nimport Pagination from \"./pagination\";\nimport { paginate } from \"./utils/paginate\";\nimport Genres from \"./genres\";\nimport { getGenres } from \"./services/fakeGenreService\";\nimport MoviesTable from \"./moviesTable\";\nimport { Link } from \"react-router-dom\";\nimport Search from \"./common/search\";\nimport _ from \"lodash\";\n\nclass Movies extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      movies: [],\n      pageSize: 4,\n      activePage: 1,\n      genres: [],\n      activeGenre: \"All Genres\",\n      sortColumn: {\n        path: \"title\",\n        order: \"asc\"\n      },\n      search: {\n        active: false,\n        value: \"\"\n      }\n    };\n\n    this.handleDelete = movie => {\n      let movies = [...this.state.movies];\n      movies = movies.filter(m => m._id !== movie._id);\n      this.setState({\n        movies\n      });\n    };\n\n    this.handleLike = movie => {\n      const movies = [...this.state.movies];\n      const index = movies.indexOf(movie);\n      movies[index] = { ...movies[index]\n      };\n      movies[index].liked = !movies[index].liked;\n      this.setState({\n        movies\n      });\n    };\n\n    this.handlePageChange = pageNumber => {\n      this.setState({\n        activePage: pageNumber\n      });\n    };\n\n    this.handleGenreChange = genre => {\n      this.setState({\n        activeGenre: genre.name,\n        activePage: 1\n      });\n    };\n\n    this.handleSort = sortColumn => {\n      this.setState({\n        sortColumn\n      });\n    };\n\n    this.getPagedData = () => {\n      const {\n        pageSize,\n        activePage,\n        movies: allMovies,\n        activeGenre,\n        sortColumn,\n        search\n      } = this.state;\n      let filtered;\n      if (!search.active) filtered = activeGenre !== \"All Genres\" ? allMovies.filter(movie => movie.genre.name === activeGenre) : allMovies;else filtered = allMovies.filter(movie => movie.title.toLowerCase().includes(search.value));\n\n      const sorted = _.orderBy(filtered, [sortColumn.path], [sortColumn.order]);\n\n      const movies = paginate(sorted, pageSize, activePage);\n      return {\n        totalCount: filtered.length,\n        data: movies\n      };\n    };\n\n    this.handleSearch = ({\n      currentTarget: input\n    }) => {\n      const search = { ...this.state.search\n      };\n      search.active = input.value === \"\" ? false : true;\n      console.log(input.value);\n      search.value = input.value;\n      this.setState({\n        search\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      movies: getMovies(),\n      genres: getGenres()\n    });\n  }\n\n  render() {\n    let {\n      length: count\n    } = this.state.movies;\n    const {\n      pageSize,\n      activePage,\n      sortColumn,\n      search\n    } = this.state;\n    if (count < 1) return /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 27\n      }\n    }, \"There are no movies in the database\");\n    const {\n      totalCount,\n      data: movies\n    } = this.getPagedData();\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Genres, {\n      genres: getGenres(),\n      activeGenre: this.state.activeGenre,\n      onGenreChange: this.handleGenreChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: \"/movies/new\",\n      className: \"btn btn-primary mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }\n    }, \"New Movie\"), /*#__PURE__*/React.createElement(Search, {\n      onChange: this.handleSearch,\n      data: search.value,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }\n    }, \"Showing \", totalCount, \" movies\"), /*#__PURE__*/React.createElement(MoviesTable, {\n      movies: movies,\n      sortColumn: sortColumn,\n      onLike: this.handleLike,\n      onDelete: this.handleDelete,\n      onSort: this.handleSort,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Pagination, {\n      itemsCount: totalCount,\n      pageSize: pageSize,\n      activePage: activePage,\n      onPageChange: this.handlePageChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nexport default Movies;","map":{"version":3,"sources":["/Users/esuweld/Desktop/Main Studies/vidly-app/vidly/src/components/movies.jsx"],"names":["React","Component","getMovies","saveMovie","Pagination","paginate","Genres","getGenres","MoviesTable","Link","Search","_","Movies","state","movies","pageSize","activePage","genres","activeGenre","sortColumn","path","order","search","active","value","handleDelete","movie","filter","m","_id","setState","handleLike","index","indexOf","liked","handlePageChange","pageNumber","handleGenreChange","genre","name","handleSort","getPagedData","allMovies","filtered","title","toLowerCase","includes","sorted","orderBy","totalCount","length","data","handleSearch","currentTarget","input","console","log","componentDidMount","render","count"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { getMovies, saveMovie } from \"./services/fakeMovieService\";\nimport Pagination from \"./pagination\";\nimport { paginate } from \"./utils/paginate\";\nimport Genres from \"./genres\";\nimport { getGenres } from \"./services/fakeGenreService\";\nimport MoviesTable from \"./moviesTable\";\nimport { Link } from \"react-router-dom\";\nimport Search from \"./common/search\";\nimport _ from \"lodash\";\n\nclass Movies extends Component {\n  state = {\n    movies: [],\n    pageSize: 4,\n    activePage: 1,\n    genres: [],\n    activeGenre: \"All Genres\",\n    sortColumn: { path: \"title\", order: \"asc\" },\n    search: { active: false, value: \"\" },\n  };\n\n  componentDidMount() {\n    this.setState({ movies: getMovies(), genres: getGenres() });\n  }\n\n  handleDelete = (movie) => {\n    let movies = [...this.state.movies];\n    movies = movies.filter((m) => m._id !== movie._id);\n    this.setState({ movies });\n  };\n\n  handleLike = (movie) => {\n    const movies = [...this.state.movies];\n    const index = movies.indexOf(movie);\n    movies[index] = { ...movies[index] };\n    movies[index].liked = !movies[index].liked;\n    this.setState({ movies });\n  };\n\n  handlePageChange = (pageNumber) => {\n    this.setState({ activePage: pageNumber });\n  };\n\n  handleGenreChange = (genre) => {\n    this.setState({ activeGenre: genre.name, activePage: 1 });\n  };\n\n  handleSort = (sortColumn) => {\n    this.setState({ sortColumn });\n  };\n\n  getPagedData = () => {\n    const {\n      pageSize,\n      activePage,\n      movies: allMovies,\n      activeGenre,\n      sortColumn,\n      search,\n    } = this.state;\n\n    let filtered;\n    if (!search.active)\n      filtered =\n        activeGenre !== \"All Genres\"\n          ? allMovies.filter((movie) => movie.genre.name === activeGenre)\n          : allMovies;\n    else\n      filtered = allMovies.filter((movie) =>\n        movie.title.toLowerCase().includes(search.value)\n      );\n    const sorted = _.orderBy(filtered, [sortColumn.path], [sortColumn.order]);\n\n    const movies = paginate(sorted, pageSize, activePage);\n\n    return { totalCount: filtered.length, data: movies };\n  };\n\n  handleSearch = ({ currentTarget: input }) => {\n    const search = { ...this.state.search };\n    search.active = input.value === \"\" ? false : true;\n    console.log(input.value);\n    search.value = input.value;\n    this.setState({ search });\n  };\n\n  render() {\n    let { length: count } = this.state.movies;\n    const { pageSize, activePage, sortColumn, search } = this.state;\n    if (count < 1) return <p>There are no movies in the database</p>;\n\n    const { totalCount, data: movies } = this.getPagedData();\n\n    return (\n      <div className=\"row\">\n        <div className=\"col-3\">\n          <Genres\n            genres={getGenres()}\n            activeGenre={this.state.activeGenre}\n            onGenreChange={this.handleGenreChange}\n          />\n        </div>\n        <div className=\"col\">\n          <Link to=\"/movies/new\" className=\"btn btn-primary mb-3\">\n            New Movie\n          </Link>\n          <Search onChange={this.handleSearch} data={search.value} />\n          <p>Showing {totalCount} movies</p>\n          <MoviesTable\n            movies={movies}\n            sortColumn={sortColumn}\n            onLike={this.handleLike}\n            onDelete={this.handleDelete}\n            onSort={this.handleSort}\n          />\n          <Pagination\n            itemsCount={totalCount}\n            pageSize={pageSize}\n            activePage={activePage}\n            onPageChange={this.handlePageChange}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Movies;\n"]},"metadata":{},"sourceType":"module"}