{"ast":null,"code":"var _jsxFileName = \"/Users/esuweld/Desktop/Main Studies/vidly-app/vidly/src/components/movies.jsx\";\nimport React, { Component } from \"react\";\nimport { getMovies } from \"./services/fakeMovieService\";\nimport Pagination from \"./pagination\";\nimport { paginate } from \"./utils/paginate\";\nimport Genres from \"./genres\";\nimport { getGenres } from \"./services/fakeGenreService\";\nimport MoviesTable from \"./moviesTable\";\n\nclass Movies extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      movies: [],\n      pageSize: 4,\n      activePage: 1,\n      genres: [],\n      activeGenre: \"All Genres\",\n      activeSorting: false\n    };\n\n    this.handleDelete = movie => {\n      let movies = [...this.state.movies];\n      movies = movies.filter(m => m._id !== movie._id);\n      this.setState({\n        movies\n      });\n    };\n\n    this.handleLike = movie => {\n      const movies = [...this.state.movies];\n      const index = movies.indexOf(movie);\n      movies[index] = { ...movies[index]\n      };\n      movies[index].liked = !movies[index].liked;\n      this.setState({\n        movies\n      });\n    };\n\n    this.handlePageChange = pageNumber => {\n      this.setState({\n        activePage: pageNumber\n      });\n    };\n\n    this.handleGenreChange = genre => {\n      this.setState({\n        activeGenre: genre.name\n      });\n    };\n\n    this.handleSort = path => {\n      console.log(path);\n      let {\n        movies\n      } = this.state;\n      movies = movies.sort((a, b) => {\n        if (a.path === b.path) return 0;\n        return a.path > b.path ? 1 : -1;\n      });\n      console.log(movies);\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      movies: getMovies(),\n      genres: getGenres()\n    });\n  }\n\n  render() {\n    let {\n      length: count\n    } = this.state.movies;\n    let {\n      pageSize,\n      activePage,\n      movies: allMovies,\n      activeGenre\n    } = this.state;\n    let movies = paginate(allMovies, pageSize, activePage);\n\n    if (activeGenre !== \"All Genres\") {\n      movies = allMovies.filter(movie => movie.genre.name === activeGenre);\n      count = movies.length;\n    }\n\n    if (count < 1) return /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 27\n      }\n    }, \"There are no movies in the database\");\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Genres, {\n      genres: getGenres(),\n      activeGenre: this.state.activeGenre,\n      onGenreChange: this.handleGenreChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }\n    }, \"Showing \", count, \" movies\"), /*#__PURE__*/React.createElement(MoviesTable, {\n      movies: movies,\n      onLike: this.handleLike,\n      onDelete: this.handleDelete,\n      onSort: this.handleSort,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Pagination, {\n      itemsCount: count,\n      pageSize: pageSize,\n      activePage: activePage,\n      onPageChange: this.handlePageChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nexport default Movies;","map":{"version":3,"sources":["/Users/esuweld/Desktop/Main Studies/vidly-app/vidly/src/components/movies.jsx"],"names":["React","Component","getMovies","Pagination","paginate","Genres","getGenres","MoviesTable","Movies","state","movies","pageSize","activePage","genres","activeGenre","activeSorting","handleDelete","movie","filter","m","_id","setState","handleLike","index","indexOf","liked","handlePageChange","pageNumber","handleGenreChange","genre","name","handleSort","path","console","log","sort","a","b","componentDidMount","render","length","count","allMovies"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { getMovies } from \"./services/fakeMovieService\";\nimport Pagination from \"./pagination\";\nimport { paginate } from \"./utils/paginate\";\nimport Genres from \"./genres\";\nimport { getGenres } from \"./services/fakeGenreService\";\nimport MoviesTable from \"./moviesTable\";\n\nclass Movies extends Component {\n  state = {\n    movies: [],\n    pageSize: 4,\n    activePage: 1,\n    genres: [],\n    activeGenre: \"All Genres\",\n    activeSorting: false,\n  };\n\n  componentDidMount() {\n    this.setState({ movies: getMovies(), genres: getGenres() });\n  }\n\n  handleDelete = (movie) => {\n    let movies = [...this.state.movies];\n    movies = movies.filter((m) => m._id !== movie._id);\n    this.setState({ movies });\n  };\n\n  handleLike = (movie) => {\n    const movies = [...this.state.movies];\n    const index = movies.indexOf(movie);\n    movies[index] = { ...movies[index] };\n    movies[index].liked = !movies[index].liked;\n    this.setState({ movies });\n  };\n\n  handlePageChange = (pageNumber) => {\n    this.setState({ activePage: pageNumber });\n  };\n\n  handleGenreChange = (genre) => {\n    this.setState({ activeGenre: genre.name });\n  };\n\n  handleSort = (path) => {\n    console.log(path);\n    let { movies } = this.state;\n    movies = movies.sort((a, b) => {\n      if (a.path === b.path) return 0;\n      return a.path > b.path ? 1 : -1;\n    });\n    console.log(movies);\n  };\n\n  render() {\n    let { length: count } = this.state.movies;\n    let { pageSize, activePage, movies: allMovies, activeGenre } = this.state;\n    let movies = paginate(allMovies, pageSize, activePage);\n\n    if (activeGenre !== \"All Genres\") {\n      movies = allMovies.filter((movie) => movie.genre.name === activeGenre);\n      count = movies.length;\n    }\n\n    if (count < 1) return <p>There are no movies in the database</p>;\n\n    return (\n      <div className=\"row\">\n        <div className=\"col-3\">\n          <Genres\n            genres={getGenres()}\n            activeGenre={this.state.activeGenre}\n            onGenreChange={this.handleGenreChange}\n          />\n        </div>\n        <div className=\"col\">\n          <p>Showing {count} movies</p>\n          <MoviesTable\n            movies={movies}\n            onLike={this.handleLike}\n            onDelete={this.handleDelete}\n            onSort={this.handleSort}\n          />\n          <Pagination\n            itemsCount={count}\n            pageSize={pageSize}\n            activePage={activePage}\n            onPageChange={this.handlePageChange}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Movies;\n"]},"metadata":{},"sourceType":"module"}