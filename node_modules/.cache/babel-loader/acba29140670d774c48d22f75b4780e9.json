{"ast":null,"code":"var _jsxFileName = \"/Users/esuweld/Desktop/Main Studies/vidly-app/src/components/customerComponents/customerForm.jsx\";\nimport React, { Component } from \"react\";\nimport Form from \"../common/form\";\nimport Joi from \"joi-browser\";\nimport { addCustomer, getOneCustomer } from \"../services/customerService\";\nimport { toast } from \"react-toastify\";\n\nclass CustomerForm extends Form {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      id: \"\",\n      data: {\n        name: \"\",\n        phone: \"\",\n        isGold: false,\n        reviews: [],\n        ratings: []\n      },\n      errors: {}\n    };\n    this.schema = {\n      id: Joi.number(),\n      name: Joi.string().required().label(\"Name\"),\n      phone: Joi.string().trim().regex(/^[0-9]{7,10}$/).required().error(() => {\n        return {\n          message: \"Invalid input.\"\n        };\n      }),\n      isGold: Joi.boolean()\n    };\n\n    this.doSubmit = async () => {\n      const data = this.state.data;\n\n      try {\n        await addCustomer(data);\n      } catch (ex) {\n        if (ex.response.status == 400) {\n          const {\n            errors\n          } = this.state;\n          errors.name = ex.response.message;\n        }\n      }\n\n      this.props.history.replace(\"/customers\");\n    };\n  }\n\n  componentDidMount() {\n    this.populateCustomerForm();\n  }\n\n  async populateCustomerForm() {\n    const customerId = this.props.match.params.id;\n    if (customerId === \"new\") return;\n\n    try {\n      const {\n        data\n      } = await getOneCustomer(customerId);\n      this.setState({\n        id: customerId,\n        data\n      });\n      console.log(data);\n    } catch (ex) {\n      toast.error(ex.response.message);\n    }\n  }\n\n  render() {\n    const customerTier = [{\n      id: true,\n      name: \"Yes\"\n    }, {\n      id: false,\n      name: \"No\"\n    }];\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }\n    }, \"Customer Form\"), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }\n    }, this.renderInput(\"name\", \"Name\"), this.renderSelect(\"isGold\", \"Gold\", customerTier), this.renderInput(\"phone\", \"Phone\"), this.renderButton(\"Save\")));\n  }\n\n}\n\nexport default CustomerForm;","map":{"version":3,"sources":["/Users/esuweld/Desktop/Main Studies/vidly-app/src/components/customerComponents/customerForm.jsx"],"names":["React","Component","Form","Joi","addCustomer","getOneCustomer","toast","CustomerForm","state","id","data","name","phone","isGold","reviews","ratings","errors","schema","number","string","required","label","trim","regex","error","message","boolean","doSubmit","ex","response","status","props","history","replace","componentDidMount","populateCustomerForm","customerId","match","params","setState","console","log","render","customerTier","handleSubmit","renderInput","renderSelect","renderButton"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Form from \"../common/form\";\nimport Joi from \"joi-browser\";\nimport { addCustomer, getOneCustomer } from \"../services/customerService\";\nimport { toast } from \"react-toastify\";\n\nclass CustomerForm extends Form {\n  state = {\n    id: \"\",\n    data: { name: \"\", phone: \"\", isGold: false, reviews: [], ratings: [] },\n    errors: {},\n  };\n\n  schema = {\n    id: Joi.number(),\n    name: Joi.string().required().label(\"Name\"),\n    phone: Joi.string()\n      .trim()\n      .regex(/^[0-9]{7,10}$/)\n      .required()\n      .error(() => {\n        return {\n          message: \"Invalid input.\",\n        };\n      }),\n    isGold: Joi.boolean(),\n  };\n\n  componentDidMount() {\n    this.populateCustomerForm();\n  }\n\n  async populateCustomerForm() {\n    const customerId = this.props.match.params.id;\n    if (customerId === \"new\") return;\n    try {\n      const { data } = await getOneCustomer(customerId);\n      this.setState({ id: customerId, data });\n      console.log(data);\n    } catch (ex) {\n      toast.error(ex.response.message);\n    }\n  }\n\n  doSubmit = async () => {\n    const data = this.state.data;\n    try {\n      await addCustomer(data);\n    } catch (ex) {\n      if (ex.response.status == 400) {\n        const { errors } = this.state;\n        errors.name = ex.response.message;\n      }\n    }\n    this.props.history.replace(\"/customers\");\n  };\n  render() {\n    const customerTier = [\n      { id: true, name: \"Yes\" },\n      { id: false, name: \"No\" },\n    ];\n    return (\n      <div>\n        <h1>Customer Form</h1>\n        <form onSubmit={this.handleSubmit}>\n          {this.renderInput(\"name\", \"Name\")}\n          {this.renderSelect(\"isGold\", \"Gold\", customerTier)}\n          {this.renderInput(\"phone\", \"Phone\")}\n          {this.renderButton(\"Save\")}\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default CustomerForm;\n"]},"metadata":{},"sourceType":"module"}