{"ast":null,"code":"var _jsxFileName = \"/Users/esuweld/Desktop/Main Studies/vidly-app/vidly/src/components/movies.jsx\";\nimport React, { Component } from \"react\";\nimport { getMovies } from \"./services/fakeMovieService\";\nimport Pagination from \"./pagination\";\nimport { paginate } from \"./utils/paginate\";\nimport Genres from \"./genres\";\nimport { getGenres } from \"./services/fakeGenreService\";\nimport MoviesTable from \"./moviesTable\";\n\nclass Movies extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      movies: [],\n      pageSize: 4,\n      activePage: 1,\n      genres: [],\n      activeGenre: \"All Genres\"\n    };\n\n    this.handleDelete = movie => {\n      let movies = [...this.state.movies];\n      movies = movies.filter(m => m._id !== movie._id);\n      this.setState({\n        movies\n      });\n    };\n\n    this.handleLike = movie => {\n      const movies = [...this.state.movies];\n      const index = movies.indexOf(movie);\n      movies[index] = { ...movies[index]\n      };\n      movies[index].liked = !movies[index].liked;\n      this.setState({\n        movies\n      });\n    };\n\n    this.handlePageChange = pageNumber => {\n      this.setState({\n        activePage: pageNumber\n      });\n    };\n\n    this.handleGenreChange = genre => {\n      this.setState({\n        activeGenre: genre.name\n      });\n    };\n\n    this.handleSort = path => {\n      console.log(path);\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      movies: getMovies(),\n      genres: getGenres()\n    });\n  }\n\n  render() {\n    let {\n      length: count\n    } = this.state.movies;\n    let {\n      pageSize,\n      activePage,\n      movies: allMovies,\n      activeGenre\n    } = this.state;\n    let movies = paginate(allMovies, pageSize, activePage);\n\n    if (activeGenre !== \"All Genres\") {\n      movies = allMovies.filter(movie => movie.genre.name === activeGenre);\n      count = movies.length;\n    }\n\n    if (count < 1) return /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 27\n      }\n    }, \"There are no movies in the database\");\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Genres, {\n      genres: getGenres(),\n      activeGenre: this.state.activeGenre,\n      onGenreChange: this.handleGenreChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }\n    }, \"Showing \", count, \" movies\"), /*#__PURE__*/React.createElement(MoviesTable, {\n      movies: movies,\n      onLike: this.handleLike,\n      onDelete: this.handleDelete,\n      onSort: this.handleSort,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Pagination, {\n      itemsCount: count,\n      pageSize: pageSize,\n      activePage: activePage,\n      onPageChange: this.handlePageChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nexport default Movies;","map":{"version":3,"sources":["/Users/esuweld/Desktop/Main Studies/vidly-app/vidly/src/components/movies.jsx"],"names":["React","Component","getMovies","Pagination","paginate","Genres","getGenres","MoviesTable","Movies","state","movies","pageSize","activePage","genres","activeGenre","handleDelete","movie","filter","m","_id","setState","handleLike","index","indexOf","liked","handlePageChange","pageNumber","handleGenreChange","genre","name","handleSort","path","console","log","componentDidMount","render","length","count","allMovies"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { getMovies } from \"./services/fakeMovieService\";\nimport Pagination from \"./pagination\";\nimport { paginate } from \"./utils/paginate\";\nimport Genres from \"./genres\";\nimport { getGenres } from \"./services/fakeGenreService\";\nimport MoviesTable from \"./moviesTable\";\n\nclass Movies extends Component {\n  state = {\n    movies: [],\n    pageSize: 4,\n    activePage: 1,\n    genres: [],\n    activeGenre: \"All Genres\",\n  };\n\n  componentDidMount() {\n    this.setState({ movies: getMovies(), genres: getGenres() });\n  }\n\n  handleDelete = (movie) => {\n    let movies = [...this.state.movies];\n    movies = movies.filter((m) => m._id !== movie._id);\n    this.setState({ movies });\n  };\n\n  handleLike = (movie) => {\n    const movies = [...this.state.movies];\n    const index = movies.indexOf(movie);\n    movies[index] = { ...movies[index] };\n    movies[index].liked = !movies[index].liked;\n    this.setState({ movies });\n  };\n\n  handlePageChange = (pageNumber) => {\n    this.setState({ activePage: pageNumber });\n  };\n\n  handleGenreChange = (genre) => {\n    this.setState({ activeGenre: genre.name });\n  };\n\n  handleSort = (path) => {\n    console.log(path);\n  };\n\n  render() {\n    let { length: count } = this.state.movies;\n    let { pageSize, activePage, movies: allMovies, activeGenre } = this.state;\n    let movies = paginate(allMovies, pageSize, activePage);\n\n    if (activeGenre !== \"All Genres\") {\n      movies = allMovies.filter((movie) => movie.genre.name === activeGenre);\n      count = movies.length;\n    }\n\n    if (count < 1) return <p>There are no movies in the database</p>;\n\n    return (\n      <div className=\"row\">\n        <div className=\"col-3\">\n          <Genres\n            genres={getGenres()}\n            activeGenre={this.state.activeGenre}\n            onGenreChange={this.handleGenreChange}\n          />\n        </div>\n        <div className=\"col\">\n          <p>Showing {count} movies</p>\n          <MoviesTable\n            movies={movies}\n            onLike={this.handleLike}\n            onDelete={this.handleDelete}\n            onSort={this.handleSort}\n          />\n          <Pagination\n            itemsCount={count}\n            pageSize={pageSize}\n            activePage={activePage}\n            onPageChange={this.handlePageChange}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Movies;\n"]},"metadata":{},"sourceType":"module"}