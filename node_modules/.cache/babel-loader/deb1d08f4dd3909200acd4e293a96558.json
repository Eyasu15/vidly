{"ast":null,"code":"var _jsxFileName = \"/Users/esuweld/Desktop/Main Studies/vidly-app/src/components/customers.js\";\nimport React, { Component } from \"react\";\nimport { getAllCustomers, deleteCustomer } from \"./services/customerService\";\nimport { Link } from \"react-router-dom\";\nimport Search from \"./common/search\";\nimport CustomerTable from \"./customerComponents/customerTable\";\nimport Pagination from \"./pagination\";\nimport { toast } from \"react-toastify\";\nimport { filter } from \"lodash\";\n\nclass Customers extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      customers: [],\n      search: {\n        active: false,\n        value: \"\"\n      },\n      sortColumn: {\n        path: \"name\",\n        order: \"asc\"\n      },\n      member: [\"Gold Members\", \"All\"],\n      pageSize: 5,\n      activePage: 1\n    };\n\n    this.handleDelete = async id => {\n      const originalCustomers = [...this.state.customers];\n      const customers = originalCustomers.filter(c => c.id !== id);\n\n      try {\n        await deleteCustomer(id);\n      } catch (ex) {\n        if (ex.response && ex.response.status === 400) {\n          toast.error(ex.response.message);\n          this.setState({\n            customers: originalCustomers\n          });\n        }\n      }\n\n      this.setState({\n        customers\n      });\n    };\n\n    this.handlePageChange = pageNumber => {\n      this.setState({\n        activePage: pageNumber\n      });\n    };\n\n    this.handleSort = sortColumn => {\n      this.setState({\n        sortColumn\n      });\n    };\n\n    this.handleSearch = ({\n      currentTarget: input\n    }) => {\n      let {\n        search\n      } = this.state;\n      search.active = input.value === \"\" ? false : true;\n      search.value = input.value;\n      this.setState({\n        search\n      });\n    };\n\n    this.getPagedData = () => {\n      const {\n        pageSize,\n        activePage,\n        customers: allCustomers,\n        sortColumn,\n        search\n      } = this.state;\n      let filtered;\n      if (!search.active) filtered = allCustomers;else filtered = allCustomers.filter(customer => customer.name.toLowerCase().includes(search.value));\n    };\n  }\n\n  async componentDidMount() {\n    const {\n      data: customers\n    } = await getAllCustomers();\n    this.setState({\n      customers\n    });\n  }\n\n  render() {\n    const {\n      customers,\n      search,\n      sortColumn,\n      pageSize,\n      activePage\n    } = this.state;\n    const totalCount = customers.length;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 7\n      }\n    }, customers && /*#__PURE__*/React.createElement(Link, {\n      to: \"/customers/new\",\n      className: \"btn btn-primary mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }\n    }, \"New Customer\"), /*#__PURE__*/React.createElement(Search, {\n      onChange: this.handleSearch,\n      data: search.value,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }\n    }, \"Showing \", totalCount, \" customers\"), /*#__PURE__*/React.createElement(CustomerTable, {\n      customers: customers,\n      sortColumn: sortColumn,\n      onLike: this.handleLike,\n      onDelete: this.handleDelete,\n      onSort: this.handleSort,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Pagination, {\n      itemsCount: totalCount,\n      pageSize: pageSize,\n      activePage: activePage,\n      onPageChange: this.handlePageChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default Customers;","map":{"version":3,"sources":["/Users/esuweld/Desktop/Main Studies/vidly-app/src/components/customers.js"],"names":["React","Component","getAllCustomers","deleteCustomer","Link","Search","CustomerTable","Pagination","toast","filter","Customers","state","customers","search","active","value","sortColumn","path","order","member","pageSize","activePage","handleDelete","id","originalCustomers","c","ex","response","status","error","message","setState","handlePageChange","pageNumber","handleSort","handleSearch","currentTarget","input","getPagedData","allCustomers","filtered","customer","name","toLowerCase","includes","componentDidMount","data","render","totalCount","length","handleLike"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { getAllCustomers, deleteCustomer } from \"./services/customerService\";\nimport { Link } from \"react-router-dom\";\nimport Search from \"./common/search\";\nimport CustomerTable from \"./customerComponents/customerTable\";\nimport Pagination from \"./pagination\";\nimport { toast } from \"react-toastify\";\nimport { filter } from \"lodash\";\n\nclass Customers extends Component {\n  state = {\n    customers: [],\n    search: { active: false, value: \"\" },\n    sortColumn: { path: \"name\", order: \"asc\" },\n    member: [\"Gold Members\", \"All\"],\n    pageSize: 5,\n    activePage: 1,\n  };\n\n  async componentDidMount() {\n    const { data: customers } = await getAllCustomers();\n    this.setState({ customers });\n  }\n\n  handleDelete = async (id) => {\n    const originalCustomers = [...this.state.customers];\n    const customers = originalCustomers.filter((c) => c.id !== id);\n    try {\n      await deleteCustomer(id);\n    } catch (ex) {\n      if (ex.response && ex.response.status === 400) {\n        toast.error(ex.response.message);\n        this.setState({ customers: originalCustomers });\n      }\n    }\n    this.setState({ customers });\n  };\n\n  handlePageChange = (pageNumber) => {\n    this.setState({ activePage: pageNumber });\n  };\n\n  handleSort = (sortColumn) => {\n    this.setState({ sortColumn });\n  };\n\n  handleSearch = ({ currentTarget: input }) => {\n    let { search } = this.state;\n    search.active = input.value === \"\" ? false : true;\n    search.value = input.value;\n\n    this.setState({ search });\n  };\n\n  getPagedData = () => {\n    const {\n      pageSize,\n      activePage,\n      customers: allCustomers,\n      sortColumn,\n      search,\n    } = this.state;\n\n    let filtered;\n    if (!search.active) filtered = allCustomers;\n    else\n      filtered = allCustomers.filter((customer) =>\n        customer.name.toLowerCase().includes(search.value)\n      );\n  };\n\n  render() {\n    const { customers, search, sortColumn, pageSize, activePage } = this.state;\n    const totalCount = customers.length;\n    return (\n      <div className=\"col\">\n        {customers && (\n          <Link to=\"/customers/new\" className=\"btn btn-primary mb-3\">\n            New Customer\n          </Link>\n        )}\n        <Search onChange={this.handleSearch} data={search.value} />\n        <p>Showing {totalCount} customers</p>\n        <CustomerTable\n          customers={customers}\n          sortColumn={sortColumn}\n          onLike={this.handleLike}\n          onDelete={this.handleDelete}\n          onSort={this.handleSort}\n        />\n        <Pagination\n          itemsCount={totalCount}\n          pageSize={pageSize}\n          activePage={activePage}\n          onPageChange={this.handlePageChange}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Customers;\n"]},"metadata":{},"sourceType":"module"}