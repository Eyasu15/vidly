{"ast":null,"code":"var _jsxFileName = \"/Users/esuweld/Desktop/Main Studies/vidly-app/vidly/src/components/common/tableBody.jsx\";\nimport React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport _ from \"lodash\";\n\nclass TableBody extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.renderCell = (item, column) => {\n      if (column.path === \"title\") return /*#__PURE__*/React.createElement(Link, {\n        to: `/movies/` + item._id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 8,\n          columnNumber: 14\n        }\n      }, item[column.path]);\n      return column.content ? column.content(item) : _.get(item, column.path);\n    };\n\n    this.createKey = (item, column) => {\n      return item._id + (column.path || column.key);\n    };\n  }\n\n  render() {\n    const {\n      items,\n      columns\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 7\n      }\n    }, items.map(item => /*#__PURE__*/React.createElement(\"tr\", {\n      key: item._id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }\n    }, columns.map(column => /*#__PURE__*/React.createElement(\"td\", {\n      key: this.createKey(item, column),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 15\n      }\n    }, this.renderCell(item, column))))));\n  }\n\n}\n\nexport default TableBody; // What are the interface of this component?\n// items : array of objects //movies\n// columns: array of paths\n\n{\n  /* <tbody>\n  {movies.map((m) => (\n  <tr key={m._id}>\n    <th scope=\"row\">{m.title}</th>\n    <td>{m.genre.name}</td>\n    <td>{m.numberInStock}</td>\n    <td>{m.dailyRentalRate}</td>\n    <td>\n      <Like movie={m} onLike={onLike} />\n    </td>\n    <td>\n      <button className=\"btn btn-danger\" onClick={() => onDelete(m)}>\n        Delete\n      </button>\n    </td>\n  </tr>\n  ))}\n  </tbody> */\n}","map":{"version":3,"sources":["/Users/esuweld/Desktop/Main Studies/vidly-app/vidly/src/components/common/tableBody.jsx"],"names":["React","Component","Link","_","TableBody","renderCell","item","column","path","_id","content","get","createKey","key","render","items","columns","props","map"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,CAAP,MAAc,QAAd;;AAEA,MAAMC,SAAN,SAAwBH,SAAxB,CAAkC;AAAA;AAAA;;AAAA,SAChCI,UADgC,GACnB,CAACC,IAAD,EAAOC,MAAP,KAAkB;AAC7B,UAAIA,MAAM,CAACC,IAAP,KAAgB,OAApB,EACE,oBAAO,oBAAC,IAAD;AAAM,QAAA,EAAE,EAAG,UAAD,GAAaF,IAAI,CAACG,GAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAkCH,IAAI,CAACC,MAAM,CAACC,IAAR,CAAtC,CAAP;AACF,aAAOD,MAAM,CAACG,OAAP,GAAiBH,MAAM,CAACG,OAAP,CAAeJ,IAAf,CAAjB,GAAwCH,CAAC,CAACQ,GAAF,CAAML,IAAN,EAAYC,MAAM,CAACC,IAAnB,CAA/C;AACD,KAL+B;;AAAA,SAOhCI,SAPgC,GAOpB,CAACN,IAAD,EAAOC,MAAP,KAAkB;AAC5B,aAAOD,IAAI,CAACG,GAAL,IAAYF,MAAM,CAACC,IAAP,IAAeD,MAAM,CAACM,GAAlC,CAAP;AACD,KAT+B;AAAA;;AAWhCC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAqB,KAAKC,KAAhC;AACA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGF,KAAK,CAACG,GAAN,CAAWZ,IAAD,iBACT;AAAI,MAAA,GAAG,EAAEA,IAAI,CAACG,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGO,OAAO,CAACE,GAAR,CAAaX,MAAD,iBACX;AAAI,MAAA,GAAG,EAAE,KAAKK,SAAL,CAAeN,IAAf,EAAqBC,MAArB,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKF,UAAL,CAAgBC,IAAhB,EAAsBC,MAAtB,CADH,CADD,CADH,CADD,CADH,CADF;AAaD;;AA1B+B;;AA6BlC,eAAeH,SAAf,C,CAEA;AACA;AACA;;AAEA;AACE;;;;;;;;;;;;;;;;;;AAkBD","sourcesContent":["import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport _ from \"lodash\";\n\nclass TableBody extends Component {\n  renderCell = (item, column) => {\n    if (column.path === \"title\")\n      return <Link to={`/movies/` + item._id}>{item[column.path]}</Link>;\n    return column.content ? column.content(item) : _.get(item, column.path);\n  };\n\n  createKey = (item, column) => {\n    return item._id + (column.path || column.key);\n  };\n\n  render() {\n    const { items, columns } = this.props;\n    return (\n      <tbody>\n        {items.map((item) => (\n          <tr key={item._id}>\n            {columns.map((column) => (\n              <td key={this.createKey(item, column)}>\n                {this.renderCell(item, column)}\n              </td>\n            ))}\n          </tr>\n        ))}\n      </tbody>\n    );\n  }\n}\n\nexport default TableBody;\n\n// What are the interface of this component?\n// items : array of objects //movies\n// columns: array of paths\n\n{\n  /* <tbody>\n{movies.map((m) => (\n  <tr key={m._id}>\n    <th scope=\"row\">{m.title}</th>\n    <td>{m.genre.name}</td>\n    <td>{m.numberInStock}</td>\n    <td>{m.dailyRentalRate}</td>\n    <td>\n      <Like movie={m} onLike={onLike} />\n    </td>\n    <td>\n      <button className=\"btn btn-danger\" onClick={() => onDelete(m)}>\n        Delete\n      </button>\n    </td>\n  </tr>\n))}\n</tbody> */\n}\n"]},"metadata":{},"sourceType":"module"}