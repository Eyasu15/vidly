{"ast":null,"code":"var _jsxFileName = \"/Users/esuweld/Desktop/Main Studies/vidly-app/vidly/src/components/common/form.jsx\";\nimport React, { Component } from \"react\";\nimport Input from \"./input\";\nimport Joi from \"joi-browser\";\nimport Select from \"./select\";\n\nclass Form extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: {},\n      errors: {}\n    };\n\n    this.validateProperty = (name, value) => {\n      const obj = {\n        [name]: value\n      };\n      const schema = {\n        [name]: this.schema[name]\n      };\n      const {\n        error\n      } = Joi.validate(obj, schema);\n      return error ? error.details[0].message : null;\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      const errors = this.validate();\n      this.setState({\n        errors: errors || {}\n      });\n      if (errors) return;\n      this.doSubmit();\n    };\n\n    this.handleChange = ({\n      currentTarget: input\n    }) => {\n      const errors = { ...this.state.errors\n      };\n      const errorMessage = this.validateProperty(input.name, input.value);\n      if (!errorMessage) delete errors[input.name];else errors[input.name] = errorMessage;\n      const data = { ...this.state.data\n      };\n      data[input.name] = input.value;\n      this.setState({\n        data,\n        errors\n      });\n    };\n  }\n\n  validate() {\n    const options = {\n      abortEarly: false\n    };\n    const {\n      error\n    } = Joi.validate(this.state.data, this.schema, options);\n    if (!error) return;\n    const errors = {};\n\n    for (let element of error.details) errors[element.path[0]] = element.message;\n\n    return Object.keys(errors).length === 0 ? null : errors;\n  }\n\n  renderButton(label) {\n    return /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-primary\",\n      disabled: this.validate(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }\n    }, label);\n  }\n\n  renderSelect(name, label, options) {\n    const {\n      data,\n      errors\n    } = this.state;\n    return /*#__PURE__*/React.createElement(Select, {\n      name: name,\n      value: data[name],\n      label: label,\n      options: options,\n      onChange: this.handleChange,\n      error: errors[name],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 7\n      }\n    });\n  }\n\n  renderInput(name, label, type = \"text\", options) {\n    let {\n      data,\n      errors\n    } = this.state;\n    return /*#__PURE__*/React.createElement(Input, {\n      name: name,\n      type: type,\n      value: data[name],\n      onChange: this.handleChange,\n      label: label,\n      errors: errors[name],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 7\n      }\n    });\n  }\n\n}\n\nexport default Form;","map":{"version":3,"sources":["/Users/esuweld/Desktop/Main Studies/vidly-app/vidly/src/components/common/form.jsx"],"names":["React","Component","Input","Joi","Select","Form","state","data","errors","validateProperty","name","value","obj","schema","error","validate","details","message","handleSubmit","e","preventDefault","setState","doSubmit","handleChange","currentTarget","input","errorMessage","options","abortEarly","element","path","Object","keys","length","renderButton","label","renderSelect","renderInput","type"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Input from \"./input\";\nimport Joi from \"joi-browser\";\nimport Select from \"./select\";\n\nclass Form extends Component {\n  state = { data: {}, errors: {} };\n\n  validate() {\n    const options = { abortEarly: false };\n    const { error } = Joi.validate(this.state.data, this.schema, options);\n\n    if (!error) return;\n\n    const errors = {};\n    for (let element of error.details)\n      errors[element.path[0]] = element.message;\n\n    return Object.keys(errors).length === 0 ? null : errors;\n  }\n\n  validateProperty = (name, value) => {\n    const obj = { [name]: value };\n    const schema = { [name]: this.schema[name] };\n    const { error } = Joi.validate(obj, schema);\n    return error ? error.details[0].message : null;\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n\n    const errors = this.validate();\n    this.setState({ errors: errors || {} });\n\n    if (errors) return;\n\n    this.doSubmit();\n  };\n\n  handleChange = ({ currentTarget: input }) => {\n    const errors = { ...this.state.errors };\n    const errorMessage = this.validateProperty(input.name, input.value);\n    if (!errorMessage) delete errors[input.name];\n    else errors[input.name] = errorMessage;\n\n    const data = { ...this.state.data };\n    data[input.name] = input.value;\n    this.setState({ data, errors });\n  };\n\n  renderButton(label) {\n    return (\n      <button className=\"btn btn-primary\" disabled={this.validate()}>\n        {label}\n      </button>\n    );\n  }\n\n  renderSelect(name, label, options) {\n    const { data, errors } = this.state;\n\n    return (\n      <Select\n        name={name}\n        value={data[name]}\n        label={label}\n        options={options}\n        onChange={this.handleChange}\n        error={errors[name]}\n      />\n    );\n  }\n\n  renderInput(name, label, type = \"text\", options) {\n    let { data, errors } = this.state;\n\n    return (\n      <Input\n        name={name}\n        type={type}\n        value={data[name]}\n        onChange={this.handleChange}\n        label={label}\n        errors={errors[name]}\n      />\n    );\n  }\n}\n\nexport default Form;\n"]},"metadata":{},"sourceType":"module"}