{"ast":null,"code":"var _jsxFileName = \"/Users/esuweld/Desktop/Main Studies/vidly-app/src/components/customerComponents/customerForm.jsx\";\nimport React, { Component } from \"react\";\nimport Form from \"../common/form\";\nimport Joi from \"joi-browser\";\n\nclass CustomerForm extends Form {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      id: \"\",\n      data: {\n        name: \"\",\n        phone: \"\",\n        isGold: false\n      },\n      errors: {}\n    };\n    this.schema = {\n      id: Joi.number().required(),\n      name: Joi.string().required().label(\"Name\"),\n      phone: Joi.string().trim().regex(/^[0-9]{7,10}$/).required().label(\"Phone\"),\n      isGold: Joi.boolean()\n    };\n\n    this.doSubmit = () => {\n      console.log(\"submitted\");\n    };\n  }\n\n  render() {\n    const customerTier = [\"true\", \"false\"];\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }\n    }, \"Customer Form\"), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }\n    }, this.renderInput(\"name\", \"Name\"), this.renderSelect(\"isGold\", \"Level\", customerTier), this.renderInput(\"phone\", \"Phone\"), this.renderButton(\"Save\")));\n  }\n\n}\n\nexport default CustomerForm;","map":{"version":3,"sources":["/Users/esuweld/Desktop/Main Studies/vidly-app/src/components/customerComponents/customerForm.jsx"],"names":["React","Component","Form","Joi","CustomerForm","state","id","data","name","phone","isGold","errors","schema","number","required","string","label","trim","regex","boolean","doSubmit","console","log","render","customerTier","handleSubmit","renderInput","renderSelect","renderButton"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,gBAAjB;AACA,OAAOC,GAAP,MAAgB,aAAhB;;AAEA,MAAMC,YAAN,SAA2BF,IAA3B,CAAgC;AAAA;AAAA;AAAA,SAC9BG,KAD8B,GACtB;AACNC,MAAAA,EAAE,EAAE,EADE;AAENC,MAAAA,IAAI,EAAE;AAAEC,QAAAA,IAAI,EAAE,EAAR;AAAYC,QAAAA,KAAK,EAAE,EAAnB;AAAuBC,QAAAA,MAAM,EAAE;AAA/B,OAFA;AAGNC,MAAAA,MAAM,EAAE;AAHF,KADsB;AAAA,SAO9BC,MAP8B,GAOrB;AACPN,MAAAA,EAAE,EAAEH,GAAG,CAACU,MAAJ,GAAaC,QAAb,EADG;AAEPN,MAAAA,IAAI,EAAEL,GAAG,CAACY,MAAJ,GAAaD,QAAb,GAAwBE,KAAxB,CAA8B,MAA9B,CAFC;AAGPP,MAAAA,KAAK,EAAEN,GAAG,CAACY,MAAJ,GACJE,IADI,GAEJC,KAFI,CAEE,eAFF,EAGJJ,QAHI,GAIJE,KAJI,CAIE,OAJF,CAHA;AAQPN,MAAAA,MAAM,EAAEP,GAAG,CAACgB,OAAJ;AARD,KAPqB;;AAAA,SAkB9BC,QAlB8B,GAkBnB,MAAM;AACfC,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACD,KApB6B;AAAA;;AAqB9BC,EAAAA,MAAM,GAAG;AACP,UAAMC,YAAY,GAAG,CAAC,MAAD,EAAS,OAAT,CAArB;AACA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,eAEE;AAAM,MAAA,QAAQ,EAAE,KAAKC,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKC,WAAL,CAAiB,MAAjB,EAAyB,MAAzB,CADH,EAEG,KAAKC,YAAL,CAAkB,QAAlB,EAA4B,OAA5B,EAAqCH,YAArC,CAFH,EAGG,KAAKE,WAAL,CAAiB,OAAjB,EAA0B,OAA1B,CAHH,EAIG,KAAKE,YAAL,CAAkB,MAAlB,CAJH,CAFF,CADF;AAWD;;AAlC6B;;AAqChC,eAAexB,YAAf","sourcesContent":["import React, { Component } from \"react\";\nimport Form from \"../common/form\";\nimport Joi from \"joi-browser\";\n\nclass CustomerForm extends Form {\n  state = {\n    id: \"\",\n    data: { name: \"\", phone: \"\", isGold: false },\n    errors: {},\n  };\n\n  schema = {\n    id: Joi.number().required(),\n    name: Joi.string().required().label(\"Name\"),\n    phone: Joi.string()\n      .trim()\n      .regex(/^[0-9]{7,10}$/)\n      .required()\n      .label(\"Phone\"),\n    isGold: Joi.boolean(),\n  };\n\n  doSubmit = () => {\n    console.log(\"submitted\");\n  };\n  render() {\n    const customerTier = [\"true\", \"false\"];\n    return (\n      <div>\n        <h1>Customer Form</h1>\n        <form onSubmit={this.handleSubmit}>\n          {this.renderInput(\"name\", \"Name\")}\n          {this.renderSelect(\"isGold\", \"Level\", customerTier)}\n          {this.renderInput(\"phone\", \"Phone\")}\n          {this.renderButton(\"Save\")}\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default CustomerForm;\n"]},"metadata":{},"sourceType":"module"}