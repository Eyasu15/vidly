{"ast":null,"code":"var _jsxFileName = \"/Users/esuweld/Desktop/Main Studies/vidly-app/vidly/src/components/common/tableBody.jsx\";\nimport React, { Component } from \"react\";\nimport _ from \"lodash\";\n\nclass TableBody extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.renderCell = (item, column) => {\n      return column.content ? column.content(item) : _.get(item, column.path);\n    };\n  }\n\n  render() {\n    const {\n      items,\n      columns\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 7\n      }\n    }, items.map(item => /*#__PURE__*/React.createElement(\"tr\", {\n      key: item.title,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 11\n      }\n    }, columns.map(column => /*#__PURE__*/React.createElement(\"td\", {\n      key: item._id + column.path || column.key,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 15\n      }\n    }, this.renderCell(item, column))))));\n  }\n\n}\n\nexport default TableBody; // What are the interface of this component?\n// items : array of objects //movies\n// columns: array of paths\n\n{\n  /* <tbody>\n  {movies.map((m) => (\n  <tr key={m._id}>\n    <th scope=\"row\">{m.title}</th>\n    <td>{m.genre.name}</td>\n    <td>{m.numberInStock}</td>\n    <td>{m.dailyRentalRate}</td>\n    <td>\n      <Like movie={m} onLike={onLike} />\n    </td>\n    <td>\n      <button className=\"btn btn-danger\" onClick={() => onDelete(m)}>\n        Delete\n      </button>\n    </td>\n  </tr>\n  ))}\n  </tbody> */\n}","map":{"version":3,"sources":["/Users/esuweld/Desktop/Main Studies/vidly-app/vidly/src/components/common/tableBody.jsx"],"names":["React","Component","_","TableBody","renderCell","item","column","content","get","path","render","items","columns","props","map","title","_id","key"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,CAAP,MAAc,QAAd;;AAEA,MAAMC,SAAN,SAAwBF,SAAxB,CAAkC;AAAA;AAAA;;AAAA,SAChCG,UADgC,GACnB,CAACC,IAAD,EAAOC,MAAP,KAAkB;AAC7B,aAAOA,MAAM,CAACC,OAAP,GAAiBD,MAAM,CAACC,OAAP,CAAeF,IAAf,CAAjB,GAAwCH,CAAC,CAACM,GAAF,CAAMH,IAAN,EAAYC,MAAM,CAACG,IAAnB,CAA/C;AACD,KAH+B;AAAA;;AAKhCC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAqB,KAAKC,KAAhC;AACA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGF,KAAK,CAACG,GAAN,CAAWT,IAAD,iBACT;AAAI,MAAA,GAAG,EAAEA,IAAI,CAACU,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGH,OAAO,CAACE,GAAR,CAAaR,MAAD,iBACX;AAAI,MAAA,GAAG,EAAED,IAAI,CAACW,GAAL,GAAWV,MAAM,CAACG,IAAlB,IAA0BH,MAAM,CAACW,GAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKb,UAAL,CAAgBC,IAAhB,EAAsBC,MAAtB,CADH,CADD,CADH,CADD,CADH,CADF;AAaD;;AApB+B;;AAuBlC,eAAeH,SAAf,C,CAEA;AACA;AACA;;AAEA;AACE;;;;;;;;;;;;;;;;;;AAkBD","sourcesContent":["import React, { Component } from \"react\";\nimport _ from \"lodash\";\n\nclass TableBody extends Component {\n  renderCell = (item, column) => {\n    return column.content ? column.content(item) : _.get(item, column.path);\n  };\n\n  render() {\n    const { items, columns } = this.props;\n    return (\n      <tbody>\n        {items.map((item) => (\n          <tr key={item.title}>\n            {columns.map((column) => (\n              <td key={item._id + column.path || column.key}>\n                {this.renderCell(item, column)}\n              </td>\n            ))}\n          </tr>\n        ))}\n      </tbody>\n    );\n  }\n}\n\nexport default TableBody;\n\n// What are the interface of this component?\n// items : array of objects //movies\n// columns: array of paths\n\n{\n  /* <tbody>\n{movies.map((m) => (\n  <tr key={m._id}>\n    <th scope=\"row\">{m.title}</th>\n    <td>{m.genre.name}</td>\n    <td>{m.numberInStock}</td>\n    <td>{m.dailyRentalRate}</td>\n    <td>\n      <Like movie={m} onLike={onLike} />\n    </td>\n    <td>\n      <button className=\"btn btn-danger\" onClick={() => onDelete(m)}>\n        Delete\n      </button>\n    </td>\n  </tr>\n))}\n</tbody> */\n}\n"]},"metadata":{},"sourceType":"module"}