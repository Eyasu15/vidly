{"ast":null,"code":"import http from \"./httpService\";\nimport { apiUrl } from \"../utils/config.json\";\nimport jwtDecode from \"jwt-decode\";\nconst usersUrl = apiUrl + \"users\";\nconst tokenKey = \"token\";\nhttp.setJwt(getHeader());\nconsole.log(getCurrentUser());\n\nfunction isUserExpired() {\n  const millis = Date.now();\n  getCurrentUser();\n}\n\nfunction registerUser(user) {\n  return http.post(usersUrl + \"/register\", user);\n}\n\nasync function login(email, password) {\n  const {\n    data: jwt\n  } = await http.post(usersUrl + \"/login\", {\n    email,\n    password\n  });\n  localStorage.setItem(tokenKey, jwt);\n  localStorage.setItem(\"header\", \"Bearer \" + jwt);\n}\n\nfunction loginWithJwt(jwt) {\n  localStorage.setItem(tokenKey, jwt);\n}\n\nfunction logout() {\n  localStorage.removeItem(tokenKey);\n  localStorage.removeItem(\"header\");\n}\n\nfunction getHeader() {\n  return localStorage.getItem(\"header\");\n}\n\nfunction getCurrentUser() {\n  try {\n    const jwt = localStorage.getItem(tokenKey);\n    return jwtDecode(jwt);\n  } catch (ex) {\n    return null;\n  }\n}\n\nexport { registerUser, login, logout, getCurrentUser, loginWithJwt, getHeader };","map":{"version":3,"sources":["/Users/esuweld/Desktop/Main Studies/vidly-app/src/components/services/userService.js"],"names":["http","apiUrl","jwtDecode","usersUrl","tokenKey","setJwt","getHeader","console","log","getCurrentUser","isUserExpired","millis","Date","now","registerUser","user","post","login","email","password","data","jwt","localStorage","setItem","loginWithJwt","logout","removeItem","getItem","ex"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,eAAjB;AACA,SAASC,MAAT,QAAuB,sBAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,MAAMC,QAAQ,GAAGF,MAAM,GAAG,OAA1B;AACA,MAAMG,QAAQ,GAAG,OAAjB;AACAJ,IAAI,CAACK,MAAL,CAAYC,SAAS,EAArB;AACAC,OAAO,CAACC,GAAR,CAAYC,cAAc,EAA1B;;AAEA,SAASC,aAAT,GAAyB;AACvB,QAAMC,MAAM,GAAGC,IAAI,CAACC,GAAL,EAAf;AACAJ,EAAAA,cAAc;AACf;;AAED,SAASK,YAAT,CAAsBC,IAAtB,EAA4B;AAC1B,SAAOf,IAAI,CAACgB,IAAL,CAAUb,QAAQ,GAAG,WAArB,EAAkCY,IAAlC,CAAP;AACD;;AAED,eAAeE,KAAf,CAAqBC,KAArB,EAA4BC,QAA5B,EAAsC;AACpC,QAAM;AAAEC,IAAAA,IAAI,EAAEC;AAAR,MAAgB,MAAMrB,IAAI,CAACgB,IAAL,CAAUb,QAAQ,GAAG,QAArB,EAA+B;AACzDe,IAAAA,KADyD;AAEzDC,IAAAA;AAFyD,GAA/B,CAA5B;AAIAG,EAAAA,YAAY,CAACC,OAAb,CAAqBnB,QAArB,EAA+BiB,GAA/B;AACAC,EAAAA,YAAY,CAACC,OAAb,CAAqB,QAArB,EAA+B,YAAYF,GAA3C;AACD;;AAED,SAASG,YAAT,CAAsBH,GAAtB,EAA2B;AACzBC,EAAAA,YAAY,CAACC,OAAb,CAAqBnB,QAArB,EAA+BiB,GAA/B;AACD;;AAED,SAASI,MAAT,GAAkB;AAChBH,EAAAA,YAAY,CAACI,UAAb,CAAwBtB,QAAxB;AACAkB,EAAAA,YAAY,CAACI,UAAb,CAAwB,QAAxB;AACD;;AAED,SAASpB,SAAT,GAAqB;AACnB,SAAOgB,YAAY,CAACK,OAAb,CAAqB,QAArB,CAAP;AACD;;AAED,SAASlB,cAAT,GAA0B;AACxB,MAAI;AACF,UAAMY,GAAG,GAAGC,YAAY,CAACK,OAAb,CAAqBvB,QAArB,CAAZ;AACA,WAAOF,SAAS,CAACmB,GAAD,CAAhB;AACD,GAHD,CAGE,OAAOO,EAAP,EAAW;AACX,WAAO,IAAP;AACD;AACF;;AAED,SAASd,YAAT,EAAuBG,KAAvB,EAA8BQ,MAA9B,EAAsChB,cAAtC,EAAsDe,YAAtD,EAAoElB,SAApE","sourcesContent":["import http from \"./httpService\";\nimport { apiUrl } from \"../utils/config.json\";\nimport jwtDecode from \"jwt-decode\";\n\nconst usersUrl = apiUrl + \"users\";\nconst tokenKey = \"token\";\nhttp.setJwt(getHeader());\nconsole.log(getCurrentUser());\n\nfunction isUserExpired() {\n  const millis = Date.now();\n  getCurrentUser();\n}\n\nfunction registerUser(user) {\n  return http.post(usersUrl + \"/register\", user);\n}\n\nasync function login(email, password) {\n  const { data: jwt } = await http.post(usersUrl + \"/login\", {\n    email,\n    password,\n  });\n  localStorage.setItem(tokenKey, jwt);\n  localStorage.setItem(\"header\", \"Bearer \" + jwt);\n}\n\nfunction loginWithJwt(jwt) {\n  localStorage.setItem(tokenKey, jwt);\n}\n\nfunction logout() {\n  localStorage.removeItem(tokenKey);\n  localStorage.removeItem(\"header\");\n}\n\nfunction getHeader() {\n  return localStorage.getItem(\"header\");\n}\n\nfunction getCurrentUser() {\n  try {\n    const jwt = localStorage.getItem(tokenKey);\n    return jwtDecode(jwt);\n  } catch (ex) {\n    return null;\n  }\n}\n\nexport { registerUser, login, logout, getCurrentUser, loginWithJwt, getHeader };\n"]},"metadata":{},"sourceType":"module"}