{"ast":null,"code":"import axios from \"axios\";\nimport { toast } from \"react-toastify\";\nimport { getHeader } from \"./userService\";\naxios.defaults.headers.common[\"x-auth-token\"] = getHeader();\naxios.interceptors.response.use(null, error => {\n  const expectedError = error.response && error.response.status >= 400 && error.response.status < 500;\n\n  if (expectedError) {\n    console.log(\"Logging the error\", error);\n    toast.error(\"An error occured\");\n  }\n\n  return Promise.reject(error);\n});\nexport default {\n  get: axios.get,\n  post: axios.post,\n  put: axios.put,\n  delete: axios.delete\n};","map":{"version":3,"sources":["/Users/esuweld/Desktop/Main Studies/vidly-app/src/components/services/httpService.js"],"names":["axios","toast","getHeader","defaults","headers","common","interceptors","response","use","error","expectedError","status","console","log","Promise","reject","get","post","put","delete"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,SAASC,SAAT,QAA0B,eAA1B;AAEAF,KAAK,CAACG,QAAN,CAAeC,OAAf,CAAuBC,MAAvB,CAA8B,cAA9B,IAAgDH,SAAS,EAAzD;AAEAF,KAAK,CAACM,YAAN,CAAmBC,QAAnB,CAA4BC,GAA5B,CAAgC,IAAhC,EAAuCC,KAAD,IAAW;AAC/C,QAAMC,aAAa,GACjBD,KAAK,CAACF,QAAN,IACAE,KAAK,CAACF,QAAN,CAAeI,MAAf,IAAyB,GADzB,IAEAF,KAAK,CAACF,QAAN,CAAeI,MAAf,GAAwB,GAH1B;;AAKA,MAAID,aAAJ,EAAmB;AACjBE,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCJ,KAAjC;AACAR,IAAAA,KAAK,CAACQ,KAAN,CAAY,kBAAZ;AACD;;AAED,SAAOK,OAAO,CAACC,MAAR,CAAeN,KAAf,CAAP;AACD,CAZD;AAcA,eAAe;AACbO,EAAAA,GAAG,EAAEhB,KAAK,CAACgB,GADE;AAEbC,EAAAA,IAAI,EAAEjB,KAAK,CAACiB,IAFC;AAGbC,EAAAA,GAAG,EAAElB,KAAK,CAACkB,GAHE;AAIbC,EAAAA,MAAM,EAAEnB,KAAK,CAACmB;AAJD,CAAf","sourcesContent":["import axios from \"axios\";\nimport { toast } from \"react-toastify\";\nimport { getHeader } from \"./userService\";\n\naxios.defaults.headers.common[\"x-auth-token\"] = getHeader();\n\naxios.interceptors.response.use(null, (error) => {\n  const expectedError =\n    error.response &&\n    error.response.status >= 400 &&\n    error.response.status < 500;\n\n  if (expectedError) {\n    console.log(\"Logging the error\", error);\n    toast.error(\"An error occured\");\n  }\n\n  return Promise.reject(error);\n});\n\nexport default {\n  get: axios.get,\n  post: axios.post,\n  put: axios.put,\n  delete: axios.delete,\n};\n"]},"metadata":{},"sourceType":"module"}