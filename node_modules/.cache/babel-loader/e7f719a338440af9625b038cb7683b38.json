{"ast":null,"code":"var _jsxFileName = \"/Users/esuweld/Desktop/Main Studies/vidly-app/src/components/movieForm.jsx\";\nimport React from \"react\";\nimport Form from \"./common/form\";\nimport Joi from \"joi-browser\";\nimport { getGenres } from \"./services/genreService\";\nimport { getOneMovie, saveMovie } from \"./services/movieService\";\nimport { toast } from \"react-toastify\";\n\nclass MovieForm extends Form {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      id: \"\",\n      data: {\n        title: \"\",\n        genreId: \"\",\n        numberInStock: \"\",\n        dailyRentalRate: \"\",\n        rate: \"\",\n        info: \"\",\n        description: \"\"\n      },\n      genres: [],\n      errors: {}\n    };\n    this.schema = {\n      id: Joi.number(),\n      title: Joi.string().required().label(\"Title\"),\n      genreId: Joi.required().label(\"Genre\"),\n      numberInStock: Joi.number().required().min(0).max(250).label(\"Number in Stock\"),\n      dailyRentalRate: Joi.number().required().min(0).max(10).label(\"Daily Rental Rate\"),\n      rate: Joi.string().required().label(\"Rate\"),\n      info: Joi.string().required().label(\"Info\"),\n      description: Joi.string().required().label(\"Description\")\n    };\n\n    this.doSubmit = async () => {\n      const {\n        title,\n        genreId,\n        numberInStock,\n        dailyRentalRate,\n        rate,\n        info,\n        description\n      } = { ...this.state.data\n      };\n      const genreArray = this.state.genres.filter(g => g.id === 1);\n      const genre = {\n        id: genreId,\n        name: genreArray.name\n      };\n      let movie = {\n        title,\n        genre,\n        numberInStock,\n        dailyRentalRate,\n        rate: {\n          rate,\n          info,\n          description\n        }\n      };\n      if (this.state.id) movie.id = this.state.id;\n\n      try {\n        await saveMovie(movie);\n      } catch (ex) {\n        if (ex.response && ex.response.status === 400) {\n          const errors = { ...this.state.errors\n          };\n          errors.username = ex.response.message;\n          this.setState({\n            errors\n          });\n        }\n\n        toast.info(\"something went wrong\");\n      }\n\n      this.props.history.push(\"/movies\");\n    };\n  }\n\n  async componentDidMount() {\n    const {\n      data: genres\n    } = await getGenres();\n    this.setState({\n      genres\n    });\n    await this.populateMovie();\n  }\n\n  async populateMovie() {\n    const movieId = this.props.match.params.id;\n    if (movieId === \"new\") return;\n\n    try {\n      const {\n        data: movie\n      } = await getOneMovie(movieId);\n      console.log(movie);\n      const data = this.mapToViewModel(movie);\n      this.setState({\n        id: movieId,\n        data\n      });\n    } catch (ex) {\n      if (ex.response && ex.response.status >= 400) this.props.history.replace(\"/not-found\");\n    }\n\n    console.log(this.state.data);\n  }\n\n  mapToViewModel(movie) {\n    const {\n      title,\n      genre,\n      numberInStock,\n      dailyRentalRate,\n      rate\n    } = movie;\n    console.log(rate);\n    const data = {\n      title: title,\n      genreId: genre.id,\n      numberInStock: numberInStock,\n      dailyRentalRate: dailyRentalRate\n    };\n\n    if (rate) {\n      data.rate = rate.rate;\n      data.info = rate.info;\n      data.description = rate.description;\n    }\n\n    return data;\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 11\n      }\n    }, \"Movie Form\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col align-self-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 13\n      }\n    }, \"Rent Movie\"))), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }\n    }, this.renderInput(\"title\", \"Title\"), this.renderSelect(\"genreId\", \"Genre\", this.state.genres), this.renderInput(\"numberInStock\", \"Number in Stock\", \"number\"), this.renderInput(\"dailyRentalRate\", \"Rental Rate\"), this.renderInput(\"rate\", \"Rate\"), this.renderInput(\"info\", \"Info\"), this.renderInput(\"description\", \"Description\"), this.renderButton(\"Save\")));\n  }\n\n}\n\nexport default MovieForm;","map":{"version":3,"sources":["/Users/esuweld/Desktop/Main Studies/vidly-app/src/components/movieForm.jsx"],"names":["React","Form","Joi","getGenres","getOneMovie","saveMovie","toast","MovieForm","state","id","data","title","genreId","numberInStock","dailyRentalRate","rate","info","description","genres","errors","schema","number","string","required","label","min","max","doSubmit","genreArray","filter","g","genre","name","movie","ex","response","status","username","message","setState","props","history","push","componentDidMount","populateMovie","movieId","match","params","console","log","mapToViewModel","replace","render","handleSubmit","renderInput","renderSelect","renderButton"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Form from \"./common/form\";\nimport Joi from \"joi-browser\";\nimport { getGenres } from \"./services/genreService\";\nimport { getOneMovie, saveMovie } from \"./services/movieService\";\nimport { toast } from \"react-toastify\";\n\nclass MovieForm extends Form {\n  state = {\n    id: \"\",\n    data: {\n      title: \"\",\n      genreId: \"\",\n      numberInStock: \"\",\n      dailyRentalRate: \"\",\n      rate: \"\",\n      info: \"\",\n      description: \"\",\n    },\n    genres: [],\n    errors: {},\n  };\n\n  schema = {\n    id: Joi.number(),\n    title: Joi.string().required().label(\"Title\"),\n    genreId: Joi.required().label(\"Genre\"),\n    numberInStock: Joi.number()\n      .required()\n      .min(0)\n      .max(250)\n      .label(\"Number in Stock\"),\n    dailyRentalRate: Joi.number()\n      .required()\n      .min(0)\n      .max(10)\n      .label(\"Daily Rental Rate\"),\n    rate: Joi.string().required().label(\"Rate\"),\n    info: Joi.string().required().label(\"Info\"),\n    description: Joi.string().required().label(\"Description\"),\n  };\n\n  async componentDidMount() {\n    const { data: genres } = await getGenres();\n    this.setState({ genres });\n    await this.populateMovie();\n  }\n\n  async populateMovie() {\n    const movieId = this.props.match.params.id;\n    if (movieId === \"new\") return;\n    try {\n      const { data: movie } = await getOneMovie(movieId);\n      console.log(movie);\n      const data = this.mapToViewModel(movie);\n      this.setState({ id: movieId, data });\n    } catch (ex) {\n      if (ex.response && ex.response.status >= 400)\n        this.props.history.replace(\"/not-found\");\n    }\n    console.log(this.state.data);\n  }\n\n  mapToViewModel(movie) {\n    const { title, genre, numberInStock, dailyRentalRate, rate } = movie;\n    console.log(rate);\n    const data = {\n      title: title,\n      genreId: genre.id,\n      numberInStock: numberInStock,\n      dailyRentalRate: dailyRentalRate,\n    };\n    if (rate) {\n      data.rate = rate.rate;\n      data.info = rate.info;\n      data.description = rate.description;\n    }\n    return data;\n  }\n\n  doSubmit = async () => {\n    const {\n      title,\n      genreId,\n      numberInStock,\n      dailyRentalRate,\n      rate,\n      info,\n      description,\n    } = {\n      ...this.state.data,\n    };\n\n    const genreArray = this.state.genres.filter((g) => g.id === 1);\n    const genre = { id: genreId, name: genreArray.name };\n\n    let movie = {\n      title,\n      genre,\n      numberInStock,\n      dailyRentalRate,\n      rate: {\n        rate,\n        info,\n        description,\n      },\n    };\n    if (this.state.id) movie.id = this.state.id;\n    try {\n      await saveMovie(movie);\n    } catch (ex) {\n      if (ex.response && ex.response.status === 400) {\n        const errors = { ...this.state.errors };\n        errors.username = ex.response.message;\n        this.setState({ errors });\n      }\n      toast.info(\"something went wrong\");\n    }\n\n    this.props.history.push(\"/movies\");\n  };\n\n  render() {\n    return (\n      <div>\n        <div className=\"row\">\n          <h1 className=\"col\">Movie Form</h1>\n          <div className=\"col align-self-right\">\n            <button className=\"btn btn-info\">Rent Movie</button>\n          </div>\n        </div>\n        <form onSubmit={this.handleSubmit}>\n          {this.renderInput(\"title\", \"Title\")}\n          {this.renderSelect(\"genreId\", \"Genre\", this.state.genres)}\n          {this.renderInput(\"numberInStock\", \"Number in Stock\", \"number\")}\n          {this.renderInput(\"dailyRentalRate\", \"Rental Rate\")}\n          {this.renderInput(\"rate\", \"Rate\")}\n          {this.renderInput(\"info\", \"Info\")}\n          {this.renderInput(\"description\", \"Description\")}\n          {this.renderButton(\"Save\")}\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default MovieForm;\n"]},"metadata":{},"sourceType":"module"}