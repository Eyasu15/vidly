Authentication and Authorization

- JSON Web Tokens
- Calling Protected APIs
- Showing / Hiding Elements
- Protecting Routes

Registering a new User
    - When the register form, we've created, is submitted
    we want to make a POST call to backend.
    - Create a file 'userService' to abstract out code.
    
    in 'userService':

        import httpService; 
        import apiEndpoint;

        const apiUrl = apiEndpoint;

        export function register(user) {
            return httpService.post(apiUrl+'/users', {
                name : user.name,
                email : user.email,
                password : user.password
            })
        }   
   
   
    - import userService in our registerForm and use it in doSubmit.
    - In case there are errors we need to catch and handle them.
    So we should surround them with try/catch block
    
    in 'registerForm':

    doSubmit = async () => {
        try {
            await userService.register(this.state.data);
        } catch(ex) {
            if(ex.respose and ex.response.status === 400) {
                const errors = {...this.state.errors };
                errors.username = ex.response.data;
                this.setState({errors});
            }
        }
    }

Logging in a User
    - Same as registering a user lets create a service.
    
    'authService'

    const apiEndpoint = apiUrl + "/auth";

    export function login(email, password) {
        return http.post(apiEndpoint, {email, password});
    }
